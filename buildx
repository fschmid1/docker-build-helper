#!/bin/bash

SCRIPT_NAME=$0

push="false"
buildArm="false"
arm="false"


show_help() {
  echo
  echo "Usage: $(basename $SCRIPT_NAME) <path-to-file>/docker-compose.yml"
  echo
  echo "  -a|--arm        addes arm64 to platform build target" 
  echo "  -p|--push       pushes the image to registry (image must be defined in compose file)"
  echo
  echo "Examples:"
  echo
  echo "  $(basename $SCRIPT_NAME) docker-compose.yml -p (will build and push the x86 images to the registry)"
  echo "  $(basename $SCRIPT_NAME) docker-compose.yml -p -a (will build and push the x86|arm64 images to the registry)"
  echo

  exit 0
}

for a in $@; do
  p=$(echo "$a" | awk '{print tolower($0)}')
  case "$p" in 
    -a) buildArm="true";;
    -p) push="true";;
    -h) show_help;;
    --arm) buildArm="true";;
    --push) push="true";;
    --help) show_help;;
  esac
done

if [[ $1 == "" ]]; then
  show_help
fi

if [[ $(uname -m) == "arm64" ]]; then
  arm="true"
  echo "Building on arm64 architecture"
fi

if [[ $buildArm == "true" ]]; then
    if [[ $arm == "false" ]]; then
      docker run --rm --privileged docker/binfmt:820fdd95a9972a5308930a2bdfb8573dd4447ad3
    fi
  builders="$(docker buildx ls | grep m1_builder)"
  if [[ $builders == "" ]]; then
   echo "No builder found, creating new m1_builder"
    docker buildx create --use --name m1_builder
  else
    echo "Using existing m1_builder"
  fi
fi

args=""

if [[ $arm == "true" ]]; then
  if [[ $push == "true" ]]; then
    if [[ $buildArm == "true" ]]; then
      args="$args --set *.platform=linux/x86_64,linux/arm/v7,linux/arm64/v8 --push"
    else
      args="$args --set *.platform=linux/x86_64 --push"
    fi
  else 
    if [[ $buildArm = "true" ]]; then
      echo "Multiplatform images can only be pushed and not loaded"
      exit 1
    else
      args="$args --set *.platform=linux/x86_64 --load"
    fi
  fi

  echo "Running build with :\"docker buildx bake -f $1 $args\""
  docker buildx bake -f $1 $args
else 
  command=""
  second=""
  if [[ $push == "true" ]]; then
    if [[ $buildArm == "true" ]]; then
      command="docker buildx bake -f $1"
      args="$args --set *.platform=linux/x86_64,linux/arm/v7,linux/arm64/v8 --push"
    else
      command="docker-compose -f $1 build"
      second="&& docker-compose -f $1 push"
    fi
  else 
    if [[ $buildArm = "true" ]]; then
      echo "Multiplatform images can only be pushed and not loaded"
      exit 1
    else
      command="docker-compose -f $1 build"
    fi
  fi

  echo "Running build with :\"$command $args $second\""
  $command $args $second
fi
